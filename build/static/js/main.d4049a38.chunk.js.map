{"version":3,"sources":["components/Button.js","components/Header.js","components/OneTask.js","components/Task.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","OneTask","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Task","tasks","map","t","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","setTasks","showAddTask","setShowAddTask","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4049a38.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return <button onClick={onClick} className=\"btn\" style={{ backgroundColor:color}}>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button;","import PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1> {title} </h1>\r\n            <Button color=\"blue\" text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Manager V.1',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nexport default Header\r\n\r\n","import {FaTimes} from \"react-icons/fa\"\r\n\r\nconst OneTask = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder':''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() =>onDelete(task.id) }/></h3>\r\n            <p>{task.day}</p>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default OneTask;","import OneTask from \"./OneTask.js\"\r\n\r\nconst Task = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {\r\n                tasks.map((t) => (\r\n                    <OneTask key={t.id} task={t} onDelete={onDelete} onToggle={onToggle}/>))\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task;","import {useState} from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert(\"Please add a task\")\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Date and Time</label>\r\n                <input type='text' placeholder=\"Add Day and Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type='submit' className='btn btn-block' value='Create Task' />\r\n        </form> \r\n    )\r\n}\r\n\r\nexport default AddTask","import Header from \"./components/Header.js\"  \r\nimport Task from \"./components/Task.js\"\r\nimport AddTask from \"./components/AddTask.js\"\r\nimport { useState } from 'react'\r\n\r\nfunction App() {\r\n    //Set of tasks\r\n    const [tasks, setTasks] = useState([\r\n        { id: 1, text: \"Dentist Appointment\", day: \"Feb 5th at 2:30pm\", reminder: false },\r\n        { id: 2, text: \"HACKATHON ARIZONA\", day: \"Feb 7th at 5:49pm\", reminder: true },\r\n        { id: 3, text: \"Birthday\", day: \"Feb 21th at 12:00am\", reminder: false }\r\n    ]);\r\n\r\n    //Show/Hide Add Task\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    //Add task\r\n    const addTask = (task) => {\r\n        const id = Math.floor(Math.random() * 100000) + 1\r\n        const newTask = { id, ...task }\r\n        setTasks([...tasks, newTask])\r\n    }\r\n\r\n    //Delete task\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    //Toggle Reminder\r\n    const toggleReminder = (id) => {\r\n        setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: !task.reminder}: task))\r\n    }\r\n\r\n  return (\r\n      <div className=\"container\">\r\n          <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n          {showAddTask && < AddTask onAdd={addTask} />}\r\n          {tasks.length > 0 ? (<Task tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : (\"No Tasks Left\")}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}